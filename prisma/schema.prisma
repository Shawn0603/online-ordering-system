// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  pending
  paid
  cancelled
  preparing
  completed
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String?
  name      String?
  orders    Order[]
  createdAt DateTime @default(now())
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}


model Dish {
  id          String   @id @default(uuid())
  name        String
  price       Float
  description String?
  available   Boolean  @default(true)
  orderItems  OrderItem[]
  createdAt   DateTime @default(now())
}

model Order {
  id         String        @id @default(uuid())
  user       User          @relation(fields: [userId], references: [id])
  userId     String
  items      OrderItem[]
  status     OrderStatus   @default(pending)
  createdAt  DateTime      @default(now())
  feedback   Feedback?
}


model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  dish      Dish     @relation(fields: [dishId], references: [id])
  dishId    String
  quantity  Int
}

model Feedback {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @unique
  content   String
  rating    Int
  createdAt DateTime @default(now())
}
